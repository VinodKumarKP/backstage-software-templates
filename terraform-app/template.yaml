apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: terraform-deployment-template
  title: Terraform Deployment Template
  description: Template for deploying Terraform code from a separate repository
  tags:
    - terraform
    - iac
    - recommended
spec:
  owner: infrastructure-team
  type: service

  parameters:
    - title: Provide deployment information
      required:
        - component_id
        - owner
        - terraform_repo_url
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name for the deployment
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this deployment does
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        terraform_repo_url:
          title: Terraform Repository URL
          type: string
          description: URL to the Git repository containing Terraform code
        terraform_directory:
          title: Terraform Directory
          type: string
          description: Path to Terraform code within the repository
          default: "/"

    - title: Configure Terraform deployment
      properties:
        terraform_version:
          title: Terraform Version
          type: string
          description: Version of Terraform to use
          default: "1.5.7"
        tf_vars:
          title: Terraform Variables
          type: object
          description: Key-value pairs for Terraform variables
        environment:
          title: Target Environment
          type: string
          enum:
            - development
            - staging
            - production
          default: development
        auto_apply:
          title: Auto Apply
          type: boolean
          description: Automatically apply Terraform changes
          default: false

  steps:
    - id: template
      name: Create Deployment Configuration
      action: fetch:template
      input:
        url: ./template
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          terraform_repo_url: ${{ parameters.terraform_repo_url }}
          terraform_directory: ${{ parameters.terraform_directory }}
          terraform_version: ${{ parameters.terraform_version }}
          tf_vars: ${{ parameters.tf_vars }}
          environment: ${{ parameters.environment }}
          auto_apply: ${{ parameters.auto_apply }}

    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: ${{ parameters.description }}
        repoUrl: github.com?owner=VinodKumarKP1984&repo=${{ parameters.component_id }}
        defaultBranch: main
        protectDefaultBranch: false
        repoVisibility: public

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}